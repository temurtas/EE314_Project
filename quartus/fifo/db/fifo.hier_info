|FIFOBuffer
clk => stack.we_a.CLK
clk => stack.waddr_a[9].CLK
clk => stack.waddr_a[8].CLK
clk => stack.waddr_a[7].CLK
clk => stack.waddr_a[6].CLK
clk => stack.waddr_a[5].CLK
clk => stack.waddr_a[4].CLK
clk => stack.waddr_a[3].CLK
clk => stack.waddr_a[2].CLK
clk => stack.waddr_a[1].CLK
clk => stack.waddr_a[0].CLK
clk => stack.data_a[12].CLK
clk => stack.data_a[11].CLK
clk => stack.data_a[10].CLK
clk => stack.data_a[9].CLK
clk => stack.data_a[8].CLK
clk => stack.data_a[7].CLK
clk => stack.data_a[6].CLK
clk => stack.data_a[5].CLK
clk => stack.data_a[4].CLK
clk => stack.data_a[3].CLK
clk => stack.data_a[2].CLK
clk => stack.data_a[1].CLK
clk => stack.data_a[0].CLK
clk => ptr_gap[0].CLK
clk => ptr_gap[1].CLK
clk => ptr_gap[2].CLK
clk => ptr_gap[3].CLK
clk => write_ptr[0].CLK
clk => write_ptr[1].CLK
clk => write_ptr[2].CLK
clk => read_ptr[0].CLK
clk => read_ptr[1].CLK
clk => read_ptr[2].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => stack.CLK0
rst => ptr_gap[0].ACLR
rst => ptr_gap[1].ACLR
rst => ptr_gap[2].ACLR
rst => ptr_gap[3].ACLR
rst => write_ptr[0].ACLR
rst => write_ptr[1].ACLR
rst => write_ptr[2].ACLR
rst => read_ptr[0].ACLR
rst => read_ptr[1].ACLR
rst => read_ptr[2].ACLR
rst => data_out[0]~reg0.ACLR
rst => data_out[1]~reg0.ACLR
rst => data_out[2]~reg0.ACLR
rst => data_out[3]~reg0.ACLR
rst => data_out[4]~reg0.ACLR
rst => data_out[5]~reg0.ACLR
rst => data_out[6]~reg0.ACLR
rst => data_out[7]~reg0.ACLR
rst => data_out[8]~reg0.ACLR
rst => data_out[9]~reg0.ACLR
rst => data_out[10]~reg0.ACLR
rst => data_out[11]~reg0.ACLR
rst => comb.IN1
write_to_stack => always0.IN0
write_to_stack => always0.IN0
write_to_stack => always0.IN0
data_in[0] => stack.data_a[0].DATAIN
data_in[0] => stack.DATAIN
data_in[1] => stack.data_a[1].DATAIN
data_in[1] => stack.DATAIN1
data_in[2] => stack.data_a[2].DATAIN
data_in[2] => stack.DATAIN2
data_in[3] => stack.data_a[3].DATAIN
data_in[3] => stack.DATAIN3
data_in[4] => stack.data_a[4].DATAIN
data_in[4] => stack.DATAIN4
data_in[5] => stack.data_a[5].DATAIN
data_in[5] => stack.DATAIN5
data_in[6] => stack.data_a[6].DATAIN
data_in[6] => stack.DATAIN6
data_in[7] => stack.data_a[7].DATAIN
data_in[7] => stack.DATAIN7
data_in[8] => stack.data_a[8].DATAIN
data_in[8] => stack.DATAIN8
data_in[9] => stack.data_a[9].DATAIN
data_in[9] => stack.DATAIN9
data_in[10] => stack.data_a[10].DATAIN
data_in[10] => stack.DATAIN10
data_in[11] => stack.data_a[11].DATAIN
data_in[11] => stack.DATAIN11
read_from_stack => always0.IN1
read_from_stack => always0.IN1
read_from_stack => always0.IN1
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
stack_full <= <GND>
stack_half_full <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
stack_empty <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


